{"version":3,"sources":["Reducers/App.js","Actions/App.js","Components/Render.js","Components/SearchAndDisplay.js","App.js","index.js"],"names":["reducer","state","action","type","searchText","payload","enterSearchText","text","Render","props","pictures","result","map","photo","className","key","id","src","urls","regular","alt","user","name","onSubmit","onChange","placeholder","value","onClick","handleClick","saveInfo","spinnerContents","isLoading","spinnerOrPictures","nothingFound","emptySearch","SearchAndDisplay","clientId","useState","setText","setResult","setIsLoading","setNothingFound","handleErrors","err","response","alert","status","request","message","dispatch","useDispatch","addText","useSelector","savingText","index","savedSearchItems","url","axios","get","then","data","results","total","catch","event","preventDefault","target","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.40da4b3b.chunk.js","sourcesContent":["function reducer(state = '', action) {\r\n  switch (action.type) {\r\n    case 'ENTER_TEXT':\r\n      return {\r\n        ...state,\r\n        searchText: [...state.searchText, action.payload]\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default reducer","const enterSearchText = (text) => ({\r\n  type: 'ENTER_TEXT',\r\n  payload: text\r\n})\r\n\r\nexport default enterSearchText","import React from 'react'\r\n\r\nfunction Render(props) {\r\n\r\n  const pictures = props.result.map((photo) => (\r\n    <figure className=\"gallery-frame\" key={photo.id} >\r\n      <img className='gallery-img' src={photo.urls.regular} alt='' />\r\n      <figcaption>Author: {photo.user.name}</figcaption>\r\n    </figure>\r\n  ))\r\n\r\n  function emptySearch() {\r\n    let emptySearchText = \"Nothing found, please try another keyword.\"\r\n    if (props.nothingFound) {\r\n      return emptySearchText\r\n    }\r\n  }\r\n  function spinnerOrPictures() {\r\n    let spinnerContents = <div className=\"spinner\"></div>\r\n    if (props.isLoading) {\r\n      return spinnerContents\r\n    } else {\r\n      return pictures\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={props.onSubmit}>\r\n        <div className='searchDiv'>\r\n          <h1>Image search app</h1>\r\n          <input\r\n            name='text'\r\n            onChange={props.onChange}\r\n            placeholder='Search Unsplash for some cool pics!'\r\n            value={props.text} />\r\n          <br />\r\n          <button\r\n            className='myButton'\r\n            onClick={props.handleClick}\r\n          >Search</button>\r\n          <button\r\n            className='myButton'\r\n            type='submit'\r\n          >Save search</button>\r\n        </div>\r\n      </form>\r\n      <div className='saveDiv'>\r\n        {props.saveInfo}\r\n      </div>\r\n      <div className='picDiv'>\r\n        {spinnerOrPictures()}\r\n        {emptySearch()}\r\n      </div>\r\n      <div className='footer'>\r\n        Created by Saulius Balčiūnas\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Render","import React, { useState } from 'react'\r\nimport axios from 'axios'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport enterSearchText from '../Actions/App'\r\nimport Render from '../Components/Render'\r\n\r\nfunction SearchAndDisplay() {\r\n\r\n  const clientId = '5K3WAlgbQBcHPunHaZhah0yg9kDDhpLMJ6tlEEv_RYI'\r\n  const [text, setText] = useState('')\r\n  const [result, setResult] = useState([])\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [nothingFound, setNothingFound] = useState()\r\n\r\n  const onChange = (event) => {\r\n    setText(event.target.value)\r\n  }\r\n\r\n  function handleErrors(err) {\r\n    if (err.response) {\r\n      alert('Issue with the response, error code: ' + err.response.status)\r\n    } else if (err.request) {\r\n      alert('Issue the with the request')\r\n    } else {\r\n      alert('Error', err.message)\r\n    }\r\n  }\r\n\r\n  const handleClick = (event) => {\r\n    event.preventDefault()\r\n    setNothingFound(false)\r\n    setIsLoading(true)\r\n    const url = 'https://api.unsplash.com/search/photos?page=1&query=' + text + \"&client_id=\" + clientId + \"&per_page=50&orientation=portrait\"\r\n    axios.get(url)\r\n      .then((response) => {\r\n        setResult(response.data.results)\r\n        if (response.data.total === 0) {\r\n          setNothingFound(true)\r\n        }\r\n        setIsLoading(false)\r\n        setText('')\r\n      })\r\n      .catch(handleErrors)\r\n  }\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault()    \r\n    if (text !== '') {\r\n      addText({\r\n        searchText: text\r\n      })\r\n      setText('')\r\n    }\r\n  }\r\n\r\n  const dispatch = useDispatch()\r\n  const addText = (text) => dispatch(enterSearchText(text))  \r\n  const savingText = useSelector((state) => state.searchText)\r\n  const saveInfo = savingText.map((savingText, index) => (\r\n    <p className='saveLi' key={index} onClick={() => (savedSearchItems(savingText.searchText))} >{savingText.searchText}</p>\r\n  ))\r\n\r\n  const savedSearchItems = (searchText) => {\r\n    setNothingFound(false)\r\n    setIsLoading(true)\r\n    const url = 'https://api.unsplash.com/search/photos?page=1&query=' + searchText + \"&client_id=\" + clientId + \"&per_page=33&orientation=portrait\"\r\n    axios.get(url)\r\n      .then((response) => {\r\n        setResult(response.data.results)\r\n        if (response.data.total === 0) {\r\n          setNothingFound(true)\r\n        }\r\n        setIsLoading(false)\r\n      })\r\n      .catch(handleErrors)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Render\r\n        onSubmit={onSubmit}\r\n        onChange={onChange}\r\n        handleClick={handleClick}\r\n        nothingFound={nothingFound}\r\n        result={result}\r\n        isLoading={isLoading}\r\n        saveInfo={saveInfo}\r\n        text={text}        \r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchAndDisplay","import React from 'react';\r\nimport { Provider } from 'react-redux'\r\nimport { createStore } from 'redux'\r\n\r\nimport reducer from './Reducers/App'\r\nimport SearchAndDisplay from './Components/SearchAndDisplay';\r\n\r\n\r\nconst initialState = {\r\n  searchText: []\r\n}\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n)\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <div>\r\n        <SearchAndDisplay />                                 \r\n      </div>\r\n    </Provider>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}